// database
datasource db {
  provider = "sqlite"
  url      = "file:database.db"
}

// generator
generator client {
  provider = "prisma-client-py"
  // recursive_type_depth = 5
}

// The idea of the tables are
// User -> Subordinate -> Application -> Server -> Requests
// A user can have multiple subordinate (or users)
// Each user has an application he handles
// Each application has server(s)
// Each server has requests

model CorporateKey {
  id        String   @id @default(cuid())
  User      User     @relation(fields: [userUid], references: [uid])
  userUid   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  uid          String         @id @default(cuid())
  name         String?
  managerId    String?
  Manager      User?          @relation("Hierarchy", fields: [managerId], references: [uid])
  Subordinates User[]         @relation("Hierarchy")
  Application  Application[]
  CorporateKey CorporateKey[]
}

model Application {
  id            String   @id @default(cuid())
  appName       String
  itCustodian   User     @relation(fields: [itCustodianId], references: [uid])
  itCustodianId String
  Servers       Server[]
}

model Server {
  id            String       @id @default(cuid())
  environment   String
  Application   Application? @relation(fields: [applicationId], references: [id])
  applicationId String?
  Requests      Requests[]
}

model Requests {
  id            String  @id @default(cuid())
  Server        Server? @relation(fields: [serverId], references: [id])
  serverId      String?
  user          String
  safe          String
  action        String
  requestID     String
  reason        String
  requestNumber String
}
